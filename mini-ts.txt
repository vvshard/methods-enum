attr_ts: "Meth : maintain_methods = out"
Ident:Meth
Punct:':'
Ident:maintain_methods
Punct:'='
Ident:out
item_ts: "#[rustfmt :: skip] impl Post
{
    /// comm add_text...
    pub fn add_text(& mut self, text : & str) ; 
    /// comm request_review...
    pub fn request_review(& mut self) -> i32 { out.1 } 
    pub fn approve(& mut self) ; 
    pub fn content(& mut self) -> & str ;
}"
Punct:'#'
Group(Bracket)-
    Ident:rustfmt
    Punct:':'
    Punct:':'
    Ident:skip
Ident:impl
Ident:Post
Group(Brace)-
    Punct:'#'
    Group(Bracket)-
        Ident:doc
        Punct:'='
        Literal:'" comm add_text..."'
    Ident:pub
    Ident:fn
    Ident:add_text
    Group(Parenthesis)-
        Punct:'&'
        Ident:mut
        Ident:self
        Punct:','
        Ident:text
        Punct:':'
        Punct:'&'
        Ident:str
    Punct:';'
    Punct:'#'
    Group(Bracket)-
        Ident:doc
        Punct:'='
        Literal:'" comm request_review..."'
    Ident:pub
    Ident:fn
    Ident:request_review
    Group(Parenthesis)-
        Punct:'&'
        Ident:mut
        Ident:self
    Punct:'-'
    Punct:'>'
    Ident:i32
    Group(Brace)-
        Ident:out
        Punct:'.'
        Literal:'1'
    Ident:pub
    Ident:fn
    Ident:approve
    Group(Parenthesis)-
        Punct:'&'
        Ident:mut
        Ident:self
    Punct:';'
    Ident:pub
    Ident:fn
    Ident:content
    Group(Parenthesis)-
        Punct:'&'
        Ident:mut
        Ident:self
    Punct:'-'
    Punct:'>'
    Punct:'&'
    Ident:str
    Punct:';'
Attr { enum_name: "Meth", run_method: "maintain_methods", out: "out" }